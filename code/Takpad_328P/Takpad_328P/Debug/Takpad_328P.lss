
Takpad_328P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000e68  00000efc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e68  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002d  00800102  00800102  00000efe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000efe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f30  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c9b  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083f  00000000  00000000  00001c6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000050b  00000000  00000000  000024ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000110  00000000  00000000  000029bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ca  00000000  00000000  00002acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000565  00000000  00000000  00002f96  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000034fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b3 04 	jmp	0x966	; 0x966 <__ctors_end>
   4:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
   8:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
   c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  10:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  14:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  18:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  1c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  20:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  24:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  28:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  2c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  30:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  34:	0c 94 d2 04 	jmp	0x9a4	; 0x9a4 <__vector_13>
  38:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  3c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  40:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  44:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  48:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  4c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  50:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  54:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  58:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  5c:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  60:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>
  64:	0c 94 d0 04 	jmp	0x9a0	; 0x9a0 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	64 62       	ori	r22, 0x24	; 36
  6a:	61 5f       	subi	r22, 0xF1	; 241
  6c:	5e 5c       	subi	r21, 0xCE	; 206
  6e:	5b 5a       	subi	r21, 0xAB	; 171
  70:	58 57       	subi	r21, 0x78	; 120
  72:	56 54       	subi	r21, 0x46	; 70
  74:	53 52       	subi	r21, 0x23	; 35
  76:	50 4f       	sbci	r21, 0xF0	; 240
  78:	4e 4d       	sbci	r20, 0xDE	; 222
  7a:	4b 4a       	sbci	r20, 0xAB	; 171
  7c:	49 48       	sbci	r20, 0x89	; 137
  7e:	47 46       	sbci	r20, 0x67	; 103
  80:	45 44       	sbci	r20, 0x45	; 69
  82:	43 42       	sbci	r20, 0x23	; 35
  84:	41 40       	sbci	r20, 0x01	; 1
  86:	3f 3e       	cpi	r19, 0xEF	; 239
  88:	3d 3c       	cpi	r19, 0xCD	; 205
  8a:	3b 3a       	cpi	r19, 0xAB	; 171
  8c:	39 38       	cpi	r19, 0x89	; 137
  8e:	37 36       	cpi	r19, 0x67	; 103
  90:	36 35       	cpi	r19, 0x56	; 86
  92:	34 33       	cpi	r19, 0x34	; 52
  94:	32 32       	cpi	r19, 0x22	; 34
  96:	31 30       	cpi	r19, 0x01	; 1
  98:	2f 2f       	mov	r18, r31
  9a:	2e 2d       	mov	r18, r14
  9c:	2c 2c       	mov	r2, r12
  9e:	2b 2a       	or	r2, r27
  a0:	2a 29       	or	r18, r10
  a2:	28 28       	or	r2, r8
  a4:	27 27       	eor	r18, r23
  a6:	26 25       	eor	r18, r6
  a8:	25 24       	eor	r2, r5
  aa:	24 23       	and	r18, r20
  ac:	23 22       	and	r2, r19
  ae:	21 21       	and	r18, r1
  b0:	20 20       	and	r2, r0
  b2:	1f 1f       	adc	r17, r31
  b4:	1e 1e       	adc	r1, r30
  b6:	1e 1d       	adc	r17, r14
  b8:	1d 1c       	adc	r1, r13
  ba:	1c 1b       	sub	r17, r28
  bc:	1b 1a       	sub	r1, r27
  be:	1a 1a       	sub	r1, r26
  c0:	19 19       	sub	r17, r9
  c2:	19 18       	sub	r1, r9
  c4:	18 17       	cp	r17, r24
  c6:	17 17       	cp	r17, r23
  c8:	16 16       	cp	r1, r22
  ca:	16 15       	cp	r17, r6
  cc:	15 15       	cp	r17, r5
  ce:	14 14       	cp	r1, r4
  d0:	14 13       	cpse	r17, r20
  d2:	13 13       	cpse	r17, r19
  d4:	12 12       	cpse	r1, r18
  d6:	12 12       	cpse	r1, r18
  d8:	11 11       	cpse	r17, r1
  da:	11 11       	cpse	r17, r1
  dc:	10 10       	cpse	r1, r0
  de:	10 10       	cpse	r1, r0
  e0:	0f 0f       	add	r16, r31
  e2:	0f 0f       	add	r16, r31
  e4:	0e 0e       	add	r0, r30
  e6:	0e 0e       	add	r0, r30
  e8:	0e 0d       	add	r16, r14
  ea:	0d 0d       	add	r16, r13
  ec:	0d 0d       	add	r16, r13
  ee:	0c 0c       	add	r0, r12
  f0:	0c 0c       	add	r0, r12
  f2:	0c 0b       	sbc	r16, r28
  f4:	0b 0b       	sbc	r16, r27
  f6:	0b 0b       	sbc	r16, r27
  f8:	0b 0a       	sbc	r0, r27
  fa:	0a 0a       	sbc	r0, r26
  fc:	0a 0a       	sbc	r0, r26
  fe:	0a 09       	sbc	r16, r10
 100:	09 09       	sbc	r16, r9
 102:	09 09       	sbc	r16, r9
 104:	09 09       	sbc	r16, r9
 106:	08 08       	sbc	r0, r8
 108:	08 08       	sbc	r0, r8
 10a:	08 08       	sbc	r0, r8
 10c:	08 08       	sbc	r0, r8
 10e:	07 07       	cpc	r16, r23
 110:	07 07       	cpc	r16, r23
 112:	07 07       	cpc	r16, r23
 114:	07 07       	cpc	r16, r23
 116:	07 06       	cpc	r0, r23
 118:	06 06       	cpc	r0, r22
 11a:	06 06       	cpc	r0, r22
 11c:	06 06       	cpc	r0, r22
 11e:	06 06       	cpc	r0, r22
 120:	06 06       	cpc	r0, r22
 122:	05 05       	cpc	r16, r5
 124:	05 05       	cpc	r16, r5
 126:	05 05       	cpc	r16, r5
 128:	05 05       	cpc	r16, r5
 12a:	05 05       	cpc	r16, r5
 12c:	05 05       	cpc	r16, r5
 12e:	05 04       	cpc	r0, r5
 130:	04 04       	cpc	r0, r4
 132:	04 04       	cpc	r0, r4
 134:	04 04       	cpc	r0, r4
 136:	04 04       	cpc	r0, r4
 138:	04 04       	cpc	r0, r4
 13a:	04 04       	cpc	r0, r4
 13c:	04 04       	cpc	r0, r4
 13e:	04 03       	mulsu	r16, r20
 140:	03 03       	mulsu	r16, r19
 142:	03 03       	mulsu	r16, r19
 144:	03 03       	mulsu	r16, r19
 146:	03 03       	mulsu	r16, r19
 148:	03 03       	mulsu	r16, r19
 14a:	03 03       	mulsu	r16, r19
 14c:	03 03       	mulsu	r16, r19
 14e:	03 03       	mulsu	r16, r19
 150:	03 03       	mulsu	r16, r19
 152:	03 03       	mulsu	r16, r19
 154:	03 02       	muls	r16, r19
 156:	02 02       	muls	r16, r18
 158:	02 02       	muls	r16, r18
 15a:	02 02       	muls	r16, r18
 15c:	02 02       	muls	r16, r18
 15e:	02 02       	muls	r16, r18
 160:	02 02       	muls	r16, r18
 162:	02 02       	muls	r16, r18
 164:	02 02       	muls	r16, r18
 166:	02 00       	.word	0x0002	; ????

00000168 <amp_sustain>:
 168:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 178:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 188:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 198:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 1a8:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 1b8:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 1c8:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 1d8:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 1e8:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 1f8:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 208:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 218:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 228:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 238:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 248:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd
 258:	64 64 64 64 64 64 64 64 64 64 64 64 64 64 64 64     dddddddddddddddd

00000268 <amp_decay>:
 268:	7e 7e 7e 7f 7f 7f 7f 7f 7f 7f 7f 7f 7e 7e 7e 7e     ~~~.........~~~~
 278:	7e 7e 7e 7e 7d 7d 7d 7d 7d 7d 7d 7d 7c 7c 7c 7c     ~~~~}}}}}}}}||||
 288:	7c 7c 7c 7c 7b 7b 7b 7b 7b 7b 7b 7b 7a 7a 7a 7a     ||||{{{{{{{{zzzz
 298:	7a 7a 7a 7a 79 79 79 79 79 79 79 79 78 78 78 78     zzzzyyyyyyyyxxxx
 2a8:	78 78 78 78 77 77 77 77 77 77 77 77 76 76 76 76     xxxxwwwwwwwwvvvv
 2b8:	76 76 76 76 75 75 75 75 75 75 75 75 74 74 74 74     vvvvuuuuuuuutttt
 2c8:	74 74 74 74 73 73 73 73 73 73 73 73 72 72 72 72     ttttssssssssrrrr
 2d8:	72 72 72 72 71 71 71 71 71 71 71 71 70 70 70 70     rrrrqqqqqqqqpppp
 2e8:	70 70 70 70 6f 6f 6f 6f 6f 6f 6f 6f 6f 6e 6e 6e     ppppooooooooonnn
 2f8:	6e 6e 6e 6e 6e 6d 6d 6d 6d 6d 6d 6d 6d 6c 6c 6c     nnnnnmmmmmmmmlll
 308:	6c 6c 6c 6c 6c 6b 6b 6b 6b 6b 6b 6b 6b 6a 6a 6a     lllllkkkkkkkkjjj
 318:	6a 6a 6a 6a 6a 69 69 69 69 69 69 69 69 68 68 68     jjjjjiiiiiiiihhh
 328:	68 68 68 68 68 67 67 67 67 67 67 67 67 66 66 66     hhhhhggggggggfff
 338:	66 66 66 66 66 65 65 65 65 65 65 65 65 64 64 64     fffffeeeeeeeeddd
 348:	64 64 64 64 64 63 63 63 63 63 63 63 63 62 62 62     dddddccccccccbbb
 358:	62 62 62 62 62 61 61 61 61 61 61 61 61 60 60 60     bbbbbaaaaaaaa```

00000368 <amp_attack>:
 368:	00 02 05 07 0a 0c 0e 10 12 14 17 19 1b 1c 1e 20     ............... 
 378:	22 24 26 27 29 2b 2c 2e 30 31 33 34 35 37 38 3a     "$&')+,.0134578:
 388:	3b 3c 3e 3f 40 41 43 44 45 46 47 48 49 4a 4b 4c     ;<>?@ACDEFGHIJKL
 398:	4d 4e 4f 50 51 52 53 54 54 55 56 57 58 58 59 5a     MNOPQRSTTUVWXXYZ
 3a8:	5b 5b 5c 5d 5d 5e 5f 5f 60 60 61 62 62 63 63 64     [[\]]^__``abbccd
 3b8:	64 65 65 66 66 67 67 68 68 69 69 6a 6a 6a 6b 6b     deeffgghhiijjjkk
 3c8:	6c 6c 6c 6d 6d 6d 6e 6e 6e 6f 6f 6f 70 70 70 70     lllmmmnnnooopppp
 3d8:	71 71 71 72 72 72 72 73 73 73 73 74 74 74 74 74     qqqrrrrssssttttt
 3e8:	75 75 75 75 75 76 76 76 76 76 76 77 77 77 77 77     uuuuuvvvvvvwwwww
 3f8:	77 78 78 78 78 78 78 78 78 79 79 79 79 79 79 79     wxxxxxxxxyyyyyyy
 408:	79 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7a 7b 7b 7b 7b     yzzzzzzzzzzz{{{{
 418:	7b 7b 7b 7b 7b 7b 7b 7b 7c 7c 7c 7c 7c 7c 7c 7c     {{{{{{{{||||||||
 428:	7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7d 7d 7d 7d 7d 7d     ||||||||||}}}}}}
 438:	7d 7d 7d 7d 7d 7d 7d 7d 7d 7d 7d 7d 7d 7d 7d 7d     }}}}}}}}}}}}}}}}
 448:	7d 7d 7d 7d 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e     }}}}~~~~~~~~~~~~
 458:	7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e 7e     ~~~~~~~~~~~~~~~~

00000468 <sine>:
 468:	00 03 06 09 0c 0f 12 15 18 1b 1e 21 24 27 2a 2d     ...........!$'*-
 478:	30 33 36 39 3b 3e 41 43 46 49 4b 4e 50 52 55 57     0369;>ACFIKNPRUW
 488:	59 5b 5e 60 62 64 66 67 69 6b 6c 6e 70 71 72 74     Y[^`bdfgiklnpqrt
 498:	75 76 77 78 79 7a 7b 7b 7c 7d 7d 7e 7e 7e 7e 7e     uvwxyz{{|}}~~~~~
 4a8:	7f 7e 7e 7e 7e 7e 7d 7d 7c 7b 7b 7a 79 78 77 76     .~~~~~}}|{{zyxwv
 4b8:	75 74 72 71 70 6e 6c 6b 69 67 66 64 62 60 5e 5b     utrqpnlkigfdb`^[
 4c8:	59 57 55 52 50 4e 4b 49 46 43 41 3e 3b 39 36 33     YWURPNKIFCA>;963
 4d8:	30 2d 2a 27 24 21 1e 1b 18 15 12 0f 0c 09 06 03     0-*'$!..........
 4e8:	00 fd fa f7 f4 f1 ee eb e8 e5 e2 df dc d9 d6 d3     ................
 4f8:	d0 cd ca c7 c5 c2 bf bd ba b7 b5 b2 b0 ae ab a9     ................
 508:	a7 a5 a2 a0 9e 9c 9a 99 97 95 94 92 90 8f 8e 8c     ................
 518:	8b 8a 89 88 87 86 85 85 84 83 83 82 82 82 82 82     ................
 528:	81 82 82 82 82 82 83 83 84 85 85 86 87 88 89 8a     ................
 538:	8b 8c 8e 8f 90 92 94 95 97 99 9a 9c 9e a0 a2 a5     ................
 548:	a7 a9 ab ae b0 b2 b5 b7 ba bd bf c2 c5 c7 ca cd     ................
 558:	d0 d3 d6 d9 dc df e2 e5 e8 eb ee f1 f4 f7 fa fc     ................

00000568 <kick>:
 568:	ff fd fb f9 f7 f5 f3 f1 ee eb e8 e4 e0 dc d8 d4     ................
 578:	d1 cd ca c7 c3 c0 bd ba b8 b5 b2 af ad ac ac ab     ................
 588:	aa aa a9 a8 a7 a7 a6 a5 a4 a3 a3 a2 a1 a0 9f 9e     ................
 598:	9d 9c 9b 9a 99 99 98 97 96 95 94 93 92 91 90 8f     ................
 5a8:	8e 8e 8d 8c 8b 8a 89 88 88 88 87 87 86 86 85 85     ................
 5b8:	85 86 87 89 8a 8c 8d 8e 8e 8f 90 90 91 92 93 94     ................
 5c8:	95 96 98 99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5     ................
 5d8:	a6 a7 a8 aa ab ac ad ae b0 b1 b2 b4 b5 b6 b7 b9     ................
 5e8:	ba bb bd be c0 c1 c3 c4 c6 c7 c9 ca cc cd cf d0     ................
 5f8:	d2 d4 d5 d7 d8 da db dd de e0 e1 e3 e4 e6 e7 e9     ................
 608:	eb ec ee ef f1 f2 f4 f5 f7 f8 fa fb fd fe 00 01     ................
 618:	02 04 06 08 0a 0c 0f 11 13 15 17 19 1c 1e 21 23     ..............!#
 628:	25 28 2a 2d 30 32 35 38 3c 3f 42 45 48 4a 4d 50     %(*-0258<?BEHJMP
 638:	52 55 58 5b 5d 60 62 65 68 6a 6d 6f 71 72 74 75     RUX[]`behjmoqrtu
 648:	77 78 7a 7b 7c 7e 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f     wxz{|~..........
 658:	7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f     ................
 668:	7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f     ................
 678:	7f 7f 7f 7e 7d 7b 79 77 75 74 72 70 6f 6d 6b 69     ...~}{ywutrpomki
 688:	68 66 65 63 61 60 5e 5d 5c 5a 59 58 56 55 54 53     hfeca`^]\ZYXVUTS
 698:	51 50 4f 4e 4d 4c 4b 4a 49 48 47 46 45 44 42 41     QPONMLKJIHGFEDBA
 6a8:	40 3f 3e 3c 3b 3a 38 37 35 34 32 31 2f 2e 2d 2b     @?><;:875421/.-+
 6b8:	2a 28 27 25 24 22 21 1f 1e 1c 1b 19 18 16 15 13     *('%$"!.........
 6c8:	12 10 0f 0d 0c 0a 09 07 06 04 03 02 00 00 fe fd     ................
 6d8:	fc fa f9 f7 f6 f5 f3 f2 f0 ef ee ec eb e9 e8 e6     ................
 6e8:	e5 e3 e1 df dd db d8 d6 d3 cf cc c9 c6 c2 bf bc     ................
 6f8:	b9 b5 b2 af ac a9 a6 a4 a1 9f 9c 9b 99 98 97 95     ................
 708:	94 93 91 90 8f 8d 8c 8b 8a 89 88 87 86 85 84 83     ................
 718:	82 82 81 81 81 81 81 81 81 81 81 81 81 81 81 81     ................
 728:	81 81 81 81 81 81 81 81 81 81 81 81 81 81 81 81     ................
 738:	81 81 81 81 81 81 81 81 81 81 81 81 81 81 81 81     ................
 748:	81 81 81 82 84 85 87 89 8b 8d 8e 90 92 94 96 98     ................
 758:	99 9b 9d 9f a1 a3 a4 a6 a8 aa ac ae b0 b1 b3        ...............

00000767 <clap>:
 767:	04 1c 2c 3d 4f 68 7e 75 69 68 5a 58 5a 33 02 dc     ..,=Oh~uihZXZ3..
 777:	ab 95 a3 a8 a5 af c2 ea 18 2e 34 41 49 44 43 44     ..........4AIDCD
 787:	3b 28 09 e4 c7 b4 a5 a2 a5 ac c6 e9 09 25 32 31     ;(...........%21
 797:	35 41 48 4d 52 56 59 53 42 3c 3e 2f 1d 19 0d ed     5AHMRVYSB<>/....
 7a7:	d7 d7 cc b2 ac b8 ba bf cf cb bc c3 d0 c7 bc cd     ................
 7b7:	e3 db c2 b8 c2 d3 d2 ba af bc c8 d3 e0 f2 0d 20     ............... 
 7c7:	26 34 35 22 25 38 3e 49 54 4b 46 41 29 12 00 dd     &45"%8>ITKFA)...
 7d7:	c7 ce d1 cd e0 0c 34 3b 30 35 3d 35 32 3e 53 5f     ......4;05=52>S_
 7e7:	57 3f 23 0e 14 1e 0e f2 df dc d8 c4 b9 be b9 ac     W?#.............
 7f7:	ad c5 f2 10 27 50 59 3a 33 2f 0c fb f7 dd ca d5     ....'PY:3/......
 807:	ec 00 13 25 26 19 0e fb de dd f3 fc f3 e8 e0 db     ...%&...........
 817:	d7 d7 e2 f2 ec d4 d7 f7 13 29 3c 4c 55 52 55 58     .........)<LURUX
 827:	3f 27 29 1c 03 04 06 02 0f 17 0f 06 fd f2 f2 f3     ?').............
 837:	ee f2 fa f2 e7 f0 f9 f2 ec ed e7 d5 c0 b6 b9 c1     ................
 847:	c5 c8 d9 fb 13 21 2b 2f 34 2e 13 fe f5 ec ef 03     .....!+/4.......
 857:	19 20 05 dd d2 d7 cf c3 b5 a7 a6 b2 c3 df fd 15     . ..............
 867:	31 44 42 3f 43 3f 36 2b 0a e7 d4 c2 b2 b4 bc c5     1DB?C?6+........
 877:	d6 e6 ef f1 ed e8 f0 fe 0a 1a 2a 33 36 38 3b 41     ..........*368;A
 887:	4a 52 53 4a 49 4e 49 3c 2f 1b 0b 00 e7 cf cd ca     JRSJINI</.......
 897:	b9 a7 a2 a3 a4 ae ca eb 03 12 21 29 1d 16 25 2d     ..........!)..%-
 8a7:	2b 31 33 29 27 32 38 36 2f 22 17 1b 21 1d 22 2d     +13)'286/"..!."-
 8b7:	27 13 fb e5 d8 cc c2 bb ac 9a 97 9a 96 99 b7 e7     '...............
 8c7:	0e 33 5b 66 53 46 40 38 2e 1f 0b f9 e7 da d0 c6     .3[fSF@8........
 8d7:	be b6 aa 9d 97 a7 bc c9 e1 00 1d 41 60 65 5f 5a     ...........A`e_Z
 8e7:	4f 41 33 1e 08 fe f9 eb d3 bd b8 b2 a3 a0 a8 a2     OA3.............
 8f7:	99 9d a2 a8 ac ae c6 d7 d0 e0 05 12 12 20 36 47     ............. 6G
 907:	4d 51 4f 3f 3c 49 50 58 5a 50 49 39 1e 1b 17 fe     MQO?<IPXZPI9....
 917:	f4 ed d1 c9 df f0 f3 ee e6 e7 e9 de ce cc d6 e1     ................
 927:	ec f4 f6 f9 f4 ed fb 14 22 31 3d 2f 15 0f 16 18     ........"1=/....
 937:	17 17 0e 02 00 04 03 f0 d7 db f3 02 10 1f 1d 15     ................
 947:	1a 1a 12 12 1c 21 1c 13 10 0a fb ea e2 e2 e1 da     .....!..........
 957:	d6 da da dc e3 e6 e6 dc cd cc d1 cf de fd 11        ...............

00000966 <__ctors_end>:
 966:	11 24       	eor	r1, r1
 968:	1f be       	out	0x3f, r1	; 63
 96a:	cf ef       	ldi	r28, 0xFF	; 255
 96c:	d8 e0       	ldi	r29, 0x08	; 8
 96e:	de bf       	out	0x3e, r29	; 62
 970:	cd bf       	out	0x3d, r28	; 61

00000972 <__do_copy_data>:
 972:	11 e0       	ldi	r17, 0x01	; 1
 974:	a0 e0       	ldi	r26, 0x00	; 0
 976:	b1 e0       	ldi	r27, 0x01	; 1
 978:	e8 e6       	ldi	r30, 0x68	; 104
 97a:	fe e0       	ldi	r31, 0x0E	; 14
 97c:	02 c0       	rjmp	.+4      	; 0x982 <__do_copy_data+0x10>
 97e:	05 90       	lpm	r0, Z+
 980:	0d 92       	st	X+, r0
 982:	a2 30       	cpi	r26, 0x02	; 2
 984:	b1 07       	cpc	r27, r17
 986:	d9 f7       	brne	.-10     	; 0x97e <__do_copy_data+0xc>

00000988 <__do_clear_bss>:
 988:	21 e0       	ldi	r18, 0x01	; 1
 98a:	a2 e0       	ldi	r26, 0x02	; 2
 98c:	b1 e0       	ldi	r27, 0x01	; 1
 98e:	01 c0       	rjmp	.+2      	; 0x992 <.do_clear_bss_start>

00000990 <.do_clear_bss_loop>:
 990:	1d 92       	st	X+, r1

00000992 <.do_clear_bss_start>:
 992:	af 32       	cpi	r26, 0x2F	; 47
 994:	b2 07       	cpc	r27, r18
 996:	e1 f7       	brne	.-8      	; 0x990 <.do_clear_bss_loop>
 998:	0e 94 96 06 	call	0xd2c	; 0xd2c <main>
 99c:	0c 94 32 07 	jmp	0xe64	; 0xe64 <_exit>

000009a0 <__bad_interrupt>:
 9a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000009a4 <__vector_13>:
// Reset note to known state
void stop_note(struct note_t* note)
{
	note->state = OFF;
	note->velocity = 0;
	note->phase = 0;
 9a4:	1f 92       	push	r1
 9a6:	0f 92       	push	r0
 9a8:	0f b6       	in	r0, 0x3f	; 63
 9aa:	0f 92       	push	r0
 9ac:	11 24       	eor	r1, r1
 9ae:	2f 93       	push	r18
 9b0:	3f 93       	push	r19
 9b2:	4f 93       	push	r20
 9b4:	5f 93       	push	r21
 9b6:	6f 93       	push	r22
 9b8:	7f 93       	push	r23
 9ba:	8f 93       	push	r24
 9bc:	9f 93       	push	r25
 9be:	af 93       	push	r26
 9c0:	bf 93       	push	r27
 9c2:	cf 93       	push	r28
 9c4:	ef 93       	push	r30
 9c6:	ff 93       	push	r31
 9c8:	b8 9b       	sbis	0x17, 0	; 23
 9ca:	06 c0       	rjmp	.+12     	; 0x9d8 <__vector_13+0x34>
 9cc:	b9 9a       	sbi	0x17, 1	; 23
 9ce:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 9d2:	8f 5f       	subi	r24, 0xFF	; 255
 9d4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
 9d8:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <__data_end>
 9dc:	f0 e0       	ldi	r31, 0x00	; 0
 9de:	e8 59       	subi	r30, 0x98	; 152
 9e0:	fb 4f       	sbci	r31, 0xFB	; 251
 9e2:	20 81       	ld	r18, Z
 9e4:	25 95       	asr	r18
 9e6:	25 95       	asr	r18
 9e8:	25 95       	asr	r18
 9ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 9ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 9f2:	82 0f       	add	r24, r18
 9f4:	91 1d       	adc	r25, r1
 9f6:	27 fd       	sbrc	r18, 7
 9f8:	9a 95       	dec	r25
 9fa:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 9fe:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 a02:	a3 e0       	ldi	r26, 0x03	; 3
 a04:	b1 e0       	ldi	r27, 0x01	; 1
 a06:	12 96       	adiw	r26, 0x02	; 2
 a08:	ed 91       	ld	r30, X+
 a0a:	fc 91       	ld	r31, X
 a0c:	13 97       	sbiw	r26, 0x03	; 3
 a0e:	f6 95       	lsr	r31
 a10:	e7 95       	ror	r30
 a12:	f6 95       	lsr	r31
 a14:	e7 95       	ror	r30
 a16:	e8 59       	subi	r30, 0x98	; 152
 a18:	fa 4f       	sbci	r31, 0xFA	; 250
 a1a:	74 91       	lpm	r23, Z
 a1c:	15 96       	adiw	r26, 0x05	; 5
 a1e:	ed 91       	ld	r30, X+
 a20:	fc 91       	ld	r31, X
 a22:	16 97       	sbiw	r26, 0x06	; 6
 a24:	00 24       	eor	r0, r0
 a26:	ee 0f       	add	r30, r30
 a28:	ff 1f       	adc	r31, r31
 a2a:	00 1c       	adc	r0, r0
 a2c:	ee 0f       	add	r30, r30
 a2e:	ff 1f       	adc	r31, r31
 a30:	00 1c       	adc	r0, r0
 a32:	ef 2f       	mov	r30, r31
 a34:	f0 2d       	mov	r31, r0
 a36:	18 96       	adiw	r26, 0x08	; 8
 a38:	8d 91       	ld	r24, X+
 a3a:	9c 91       	ld	r25, X
 a3c:	19 97       	sbiw	r26, 0x09	; 9
 a3e:	e8 0f       	add	r30, r24
 a40:	f9 1f       	adc	r31, r25
 a42:	c4 91       	lpm	r28, Z
 a44:	1c 96       	adiw	r26, 0x0c	; 12
 a46:	ed 91       	ld	r30, X+
 a48:	fc 91       	ld	r31, X
 a4a:	1d 97       	sbiw	r26, 0x0d	; 13
 a4c:	f6 95       	lsr	r31
 a4e:	e7 95       	ror	r30
 a50:	f6 95       	lsr	r31
 a52:	e7 95       	ror	r30
 a54:	e9 59       	subi	r30, 0x99	; 153
 a56:	f8 4f       	sbci	r31, 0xF8	; 248
 a58:	54 91       	lpm	r21, Z
 a5a:	1f 96       	adiw	r26, 0x0f	; 15
 a5c:	ed 91       	ld	r30, X+
 a5e:	fc 91       	ld	r31, X
 a60:	50 97       	sbiw	r26, 0x10	; 16
 a62:	00 24       	eor	r0, r0
 a64:	ee 0f       	add	r30, r30
 a66:	ff 1f       	adc	r31, r31
 a68:	00 1c       	adc	r0, r0
 a6a:	ee 0f       	add	r30, r30
 a6c:	ff 1f       	adc	r31, r31
 a6e:	00 1c       	adc	r0, r0
 a70:	ef 2f       	mov	r30, r31
 a72:	f0 2d       	mov	r31, r0
 a74:	52 96       	adiw	r26, 0x12	; 18
 a76:	8d 91       	ld	r24, X+
 a78:	9c 91       	ld	r25, X
 a7a:	53 97       	sbiw	r26, 0x13	; 19
 a7c:	e8 0f       	add	r30, r24
 a7e:	f9 1f       	adc	r31, r25
 a80:	64 91       	lpm	r22, Z
 a82:	56 96       	adiw	r26, 0x16	; 22
 a84:	ed 91       	ld	r30, X+
 a86:	fc 91       	ld	r31, X
 a88:	57 97       	sbiw	r26, 0x17	; 23
 a8a:	f6 95       	lsr	r31
 a8c:	e7 95       	ror	r30
 a8e:	f6 95       	lsr	r31
 a90:	e7 95       	ror	r30
 a92:	e8 59       	subi	r30, 0x98	; 152
 a94:	fa 4f       	sbci	r31, 0xFA	; 250
 a96:	34 91       	lpm	r19, Z
 a98:	59 96       	adiw	r26, 0x19	; 25
 a9a:	ed 91       	ld	r30, X+
 a9c:	fc 91       	ld	r31, X
 a9e:	5a 97       	sbiw	r26, 0x1a	; 26
 aa0:	00 24       	eor	r0, r0
 aa2:	ee 0f       	add	r30, r30
 aa4:	ff 1f       	adc	r31, r31
 aa6:	00 1c       	adc	r0, r0
 aa8:	ee 0f       	add	r30, r30
 aaa:	ff 1f       	adc	r31, r31
 aac:	00 1c       	adc	r0, r0
 aae:	ef 2f       	mov	r30, r31
 ab0:	f0 2d       	mov	r31, r0
 ab2:	5c 96       	adiw	r26, 0x1c	; 28
 ab4:	8d 91       	ld	r24, X+
 ab6:	9c 91       	ld	r25, X
 ab8:	5d 97       	sbiw	r26, 0x1d	; 29
 aba:	e8 0f       	add	r30, r24
 abc:	f9 1f       	adc	r31, r25
 abe:	44 91       	lpm	r20, Z
 ac0:	90 96       	adiw	r26, 0x20	; 32
 ac2:	ed 91       	ld	r30, X+
 ac4:	fc 91       	ld	r31, X
 ac6:	91 97       	sbiw	r26, 0x21	; 33
 ac8:	f6 95       	lsr	r31
 aca:	e7 95       	ror	r30
 acc:	f6 95       	lsr	r31
 ace:	e7 95       	ror	r30
 ad0:	e8 59       	subi	r30, 0x98	; 152
 ad2:	fa 4f       	sbci	r31, 0xFA	; 250
 ad4:	94 91       	lpm	r25, Z
 ad6:	93 96       	adiw	r26, 0x23	; 35
 ad8:	ed 91       	ld	r30, X+
 ada:	fc 91       	ld	r31, X
 adc:	94 97       	sbiw	r26, 0x24	; 36
 ade:	00 24       	eor	r0, r0
 ae0:	ee 0f       	add	r30, r30
 ae2:	ff 1f       	adc	r31, r31
 ae4:	00 1c       	adc	r0, r0
 ae6:	ee 0f       	add	r30, r30
 ae8:	ff 1f       	adc	r31, r31
 aea:	00 1c       	adc	r0, r0
 aec:	ef 2f       	mov	r30, r31
 aee:	f0 2d       	mov	r31, r0
 af0:	96 96       	adiw	r26, 0x26	; 38
 af2:	0d 90       	ld	r0, X+
 af4:	bc 91       	ld	r27, X
 af6:	a0 2d       	mov	r26, r0
 af8:	ea 0f       	add	r30, r26
 afa:	fb 1f       	adc	r31, r27
 afc:	e4 91       	lpm	r30, Z
 afe:	7c 02       	muls	r23, r28
 b00:	d0 01       	movw	r26, r0
 b02:	11 24       	eor	r1, r1
 b04:	aa 0f       	add	r26, r26
 b06:	ab 2f       	mov	r26, r27
 b08:	aa 1f       	adc	r26, r26
 b0a:	bb 0b       	sbc	r27, r27
 b0c:	56 02       	muls	r21, r22
 b0e:	b0 01       	movw	r22, r0
 b10:	11 24       	eor	r1, r1
 b12:	66 0f       	add	r22, r22
 b14:	67 2f       	mov	r22, r23
 b16:	66 1f       	adc	r22, r22
 b18:	77 0b       	sbc	r23, r23
 b1a:	6a 0f       	add	r22, r26
 b1c:	7b 1f       	adc	r23, r27
 b1e:	34 02       	muls	r19, r20
 b20:	a0 01       	movw	r20, r0
 b22:	11 24       	eor	r1, r1
 b24:	44 0f       	add	r20, r20
 b26:	45 2f       	mov	r20, r21
 b28:	44 1f       	adc	r20, r20
 b2a:	55 0b       	sbc	r21, r21
 b2c:	9b 01       	movw	r18, r22
 b2e:	24 0f       	add	r18, r20
 b30:	35 1f       	adc	r19, r21
 b32:	9e 02       	muls	r25, r30
 b34:	f0 01       	movw	r30, r0
 b36:	11 24       	eor	r1, r1
 b38:	ee 0f       	add	r30, r30
 b3a:	ef 2f       	mov	r30, r31
 b3c:	ee 1f       	adc	r30, r30
 b3e:	ff 0b       	sbc	r31, r31
 b40:	c9 01       	movw	r24, r18
 b42:	8e 0f       	add	r24, r30
 b44:	9f 1f       	adc	r25, r31
 b46:	95 95       	asr	r25
 b48:	87 95       	ror	r24
 b4a:	95 95       	asr	r25
 b4c:	87 95       	ror	r24
 b4e:	81 58       	subi	r24, 0x81	; 129
 b50:	9f 4f       	sbci	r25, 0xFF	; 255
 b52:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 b56:	e3 e0       	ldi	r30, 0x03	; 3
 b58:	f1 e0       	ldi	r31, 0x01	; 1
 b5a:	4b e2       	ldi	r20, 0x2B	; 43
 b5c:	51 e0       	ldi	r21, 0x01	; 1
 b5e:	80 81       	ld	r24, Z
 b60:	88 23       	and	r24, r24
 b62:	b1 f0       	breq	.+44     	; 0xb90 <__vector_13+0x1ec>
 b64:	81 81       	ldd	r24, Z+1	; 0x01
 b66:	24 81       	ldd	r18, Z+4	; 0x04
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	bc 01       	movw	r22, r24
 b6c:	62 0f       	add	r22, r18
 b6e:	71 1d       	adc	r23, r1
 b70:	22 81       	ldd	r18, Z+2	; 0x02
 b72:	33 81       	ldd	r19, Z+3	; 0x03
 b74:	26 0f       	add	r18, r22
 b76:	37 1f       	adc	r19, r23
 b78:	37 70       	andi	r19, 0x07	; 7
 b7a:	33 83       	std	Z+3, r19	; 0x03
 b7c:	22 83       	std	Z+2, r18	; 0x02
 b7e:	27 81       	ldd	r18, Z+7	; 0x07
 b80:	82 0f       	add	r24, r18
 b82:	91 1d       	adc	r25, r1
 b84:	25 81       	ldd	r18, Z+5	; 0x05
 b86:	36 81       	ldd	r19, Z+6	; 0x06
 b88:	82 0f       	add	r24, r18
 b8a:	93 1f       	adc	r25, r19
 b8c:	96 83       	std	Z+6, r25	; 0x06
 b8e:	85 83       	std	Z+5, r24	; 0x05
 b90:	3a 96       	adiw	r30, 0x0a	; 10
 b92:	e4 17       	cp	r30, r20
 b94:	f5 07       	cpc	r31, r21
 b96:	19 f7       	brne	.-58     	; 0xb5e <__vector_13+0x1ba>
 b98:	ff 91       	pop	r31
 b9a:	ef 91       	pop	r30
 b9c:	cf 91       	pop	r28
 b9e:	bf 91       	pop	r27
 ba0:	af 91       	pop	r26
 ba2:	9f 91       	pop	r25
 ba4:	8f 91       	pop	r24
 ba6:	7f 91       	pop	r23
 ba8:	6f 91       	pop	r22
 baa:	5f 91       	pop	r21
 bac:	4f 91       	pop	r20
 bae:	3f 91       	pop	r19
 bb0:	2f 91       	pop	r18
 bb2:	0f 90       	pop	r0
 bb4:	0f be       	out	0x3f, r0	; 63
 bb6:	0f 90       	pop	r0
 bb8:	1f 90       	pop	r1
 bba:	18 95       	reti

00000bbc <start_note>:
 bbc:	fc 01       	movw	r30, r24
 bbe:	80 81       	ld	r24, Z
 bc0:	81 11       	cpse	r24, r1
 bc2:	03 c0       	rjmp	.+6      	; 0xbca <start_note+0xe>
 bc4:	16 82       	std	Z+6, r1	; 0x06
 bc6:	15 82       	std	Z+5, r1	; 0x05
 bc8:	0f c0       	rjmp	.+30     	; 0xbe8 <start_note+0x2c>
 bca:	82 30       	cpi	r24, 0x02	; 2
 bcc:	59 f4       	brne	.+22     	; 0xbe4 <start_note+0x28>
 bce:	25 81       	ldd	r18, Z+5	; 0x05
 bd0:	36 81       	ldd	r19, Z+6	; 0x06
 bd2:	2f 77       	andi	r18, 0x7F	; 127
 bd4:	33 27       	eor	r19, r19
 bd6:	80 e8       	ldi	r24, 0x80	; 128
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	82 1b       	sub	r24, r18
 bdc:	93 0b       	sbc	r25, r19
 bde:	96 83       	std	Z+6, r25	; 0x06
 be0:	85 83       	std	Z+5, r24	; 0x05
 be2:	02 c0       	rjmp	.+4      	; 0xbe8 <start_note+0x2c>
 be4:	16 82       	std	Z+6, r1	; 0x06
 be6:	15 82       	std	Z+5, r1	; 0x05
 be8:	88 e6       	ldi	r24, 0x68	; 104
 bea:	93 e0       	ldi	r25, 0x03	; 3
 bec:	91 87       	std	Z+9, r25	; 0x09
 bee:	80 87       	std	Z+8, r24	; 0x08
 bf0:	81 e0       	ldi	r24, 0x01	; 1
 bf2:	80 83       	st	Z, r24
 bf4:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <env>
 bf8:	87 83       	std	Z+7, r24	; 0x07
 bfa:	08 95       	ret

00000bfc <update_note>:
}

// Update note state
void update_note(struct note_t* note)
{
 bfc:	fc 01       	movw	r30, r24
	note->env_phase = 0;
 bfe:	16 82       	std	Z+6, r1	; 0x06
 c00:	15 82       	std	Z+5, r1	; 0x05
	if(note->state == ATTACK)
 c02:	80 81       	ld	r24, Z
 c04:	81 30       	cpi	r24, 0x01	; 1
 c06:	51 f4       	brne	.+20     	; 0xc1c <update_note+0x20>
	{
		note->env_table = (uint16_t)amp_decay;
 c08:	88 e6       	ldi	r24, 0x68	; 104
 c0a:	92 e0       	ldi	r25, 0x02	; 2
 c0c:	91 87       	std	Z+9, r25	; 0x09
 c0e:	80 87       	std	Z+8, r24	; 0x08
		note->state = DECAY;
 c10:	82 e0       	ldi	r24, 0x02	; 2
 c12:	80 83       	st	Z, r24
		note->env_step = env.d_step; // times some velocity modifier
 c14:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <env+0x1>
 c18:	87 83       	std	Z+7, r24	; 0x07
 c1a:	08 95       	ret
	}
	else if(note->state == DECAY)
 c1c:	82 30       	cpi	r24, 0x02	; 2
 c1e:	51 f4       	brne	.+20     	; 0xc34 <update_note+0x38>
	{
		note->env_table = (uint16_t)amp_sustain;
 c20:	88 e6       	ldi	r24, 0x68	; 104
 c22:	91 e0       	ldi	r25, 0x01	; 1
 c24:	91 87       	std	Z+9, r25	; 0x09
 c26:	80 87       	std	Z+8, r24	; 0x08
		note->state = SUSTAIN;
 c28:	83 e0       	ldi	r24, 0x03	; 3
 c2a:	80 83       	st	Z, r24
		note->env_step = env.s_step; // times some velocity modifier
 c2c:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <env+0x2>
 c30:	87 83       	std	Z+7, r24	; 0x07
 c32:	08 95       	ret
	}
	else if(note->state == SUSTAIN)
 c34:	83 30       	cpi	r24, 0x03	; 3
 c36:	51 f4       	brne	.+20     	; 0xc4c <update_note+0x50>
	{
		note->env_table = (uint16_t)amp_release;
 c38:	88 e6       	ldi	r24, 0x68	; 104
 c3a:	90 e0       	ldi	r25, 0x00	; 0
 c3c:	91 87       	std	Z+9, r25	; 0x09
 c3e:	80 87       	std	Z+8, r24	; 0x08
		note->state = RELEASE;
 c40:	84 e0       	ldi	r24, 0x04	; 4
 c42:	80 83       	st	Z, r24
		note->env_step = env.r_step; // times some velocity modifier
 c44:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <env+0x3>
 c48:	87 83       	std	Z+7, r24	; 0x07
 c4a:	08 95       	ret
	}
	else if(note->state == RELEASE)
 c4c:	84 30       	cpi	r24, 0x04	; 4
 c4e:	21 f4       	brne	.+8      	; 0xc58 <update_note+0x5c>
}

// Reset note to known state
void stop_note(struct note_t* note)
{
	note->state = OFF;
 c50:	10 82       	st	Z, r1
	note->velocity = 0;
 c52:	11 82       	std	Z+1, r1	; 0x01
	note->phase = 0;
 c54:	13 82       	std	Z+3, r1	; 0x03
 c56:	12 82       	std	Z+2, r1	; 0x02
 c58:	08 95       	ret

00000c5a <read_ADC>:

// Read ADC, blocking read
uint8_t read_ADC(uint8_t ADC_Channel)
{
	// Set channel mux in ADMUX
	ADMUX = (ADMUX & 0xF0) | (ADC_Channel & 0x0F);
 c5a:	ec e7       	ldi	r30, 0x7C	; 124
 c5c:	f0 e0       	ldi	r31, 0x00	; 0
 c5e:	90 81       	ld	r25, Z
 c60:	90 7f       	andi	r25, 0xF0	; 240
 c62:	8f 70       	andi	r24, 0x0F	; 15
 c64:	89 2b       	or	r24, r25
 c66:	80 83       	st	Z, r24
	// Set start conversion bit
	ADCSRA |= (1 << ADSC);
 c68:	ea e7       	ldi	r30, 0x7A	; 122
 c6a:	f0 e0       	ldi	r31, 0x00	; 0
 c6c:	80 81       	ld	r24, Z
 c6e:	80 64       	ori	r24, 0x40	; 64
 c70:	80 83       	st	Z, r24
	// Loop until conversion is complete
	while (ADCSRA & (1 << ADSC));
 c72:	80 81       	ld	r24, Z
 c74:	86 fd       	sbrc	r24, 6
 c76:	fd cf       	rjmp	.-6      	; 0xc72 <read_ADC+0x18>
	// Return high byte of results
	return ADCH;
 c78:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 c7c:	08 95       	ret

00000c7e <tc_init>:
	// with a PWM frequency of ~20KHz.
	// T/C will set OC1A to 1 at 0x00, count to OCR1A,
	// set OC1A low, count to 0xFF, reset to 0x00.
	
	// Set up TC2 for CTC mode, 128 pre-scalar, 64 count
	TCCR2A |= (1 << WGM21);
 c7e:	e0 eb       	ldi	r30, 0xB0	; 176
 c80:	f0 e0       	ldi	r31, 0x00	; 0
 c82:	80 81       	ld	r24, Z
 c84:	82 60       	ori	r24, 0x02	; 2
 c86:	80 83       	st	Z, r24
	TCCR2B |= (1 << CS22) | (1 << CS20);
 c88:	e1 eb       	ldi	r30, 0xB1	; 177
 c8a:	f0 e0       	ldi	r31, 0x00	; 0
 c8c:	80 81       	ld	r24, Z
 c8e:	85 60       	ori	r24, 0x05	; 5
 c90:	80 83       	st	Z, r24
	OCR2A = 64;
 c92:	80 e4       	ldi	r24, 0x40	; 64
 c94:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	
	// Set up TC1
	// Set COM1A output behavior, set fast PWM mode, TOP = ICR1
	TCCR1A |= (1 << COM1A1) | (1 << WGM11);
 c98:	e0 e8       	ldi	r30, 0x80	; 128
 c9a:	f0 e0       	ldi	r31, 0x00	; 0
 c9c:	80 81       	ld	r24, Z
 c9e:	82 68       	ori	r24, 0x82	; 130
 ca0:	80 83       	st	Z, r24
	// Set fast PWM mode, set counter clock to sys_clk
	TCCR1B |= (1 << WGM13) | (1 << WGM12) | (1 << CS10);
 ca2:	e1 e8       	ldi	r30, 0x81	; 129
 ca4:	f0 e0       	ldi	r31, 0x00	; 0
 ca6:	80 81       	ld	r24, Z
 ca8:	89 61       	ori	r24, 0x19	; 25
 caa:	80 83       	st	Z, r24
	// Enable timer overflow interrupts
	TIMSK1 |= 1;
 cac:	ef e6       	ldi	r30, 0x6F	; 111
 cae:	f0 e0       	ldi	r31, 0x00	; 0
 cb0:	80 81       	ld	r24, Z
 cb2:	81 60       	ori	r24, 0x01	; 1
 cb4:	80 83       	st	Z, r24
	
	ICR1 = timer_val;
 cb6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 cba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 cbe:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 cc2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	OCR1A = 0xFF;
 cc6:	8f ef       	ldi	r24, 0xFF	; 255
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 cce:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	
	// Globally enable interrupts
	sei();
 cd2:	78 94       	sei
 cd4:	08 95       	ret

00000cd6 <adc_init>:
{
	// Note: Set ADIE bit in ADCSRA and I-bit in SREG to
	// enable conversion complete interrupt.
	
	// Set Aref to AVcc, left-adjust results
	ADMUX = (1 << REFS0) | (1 << ADLAR);
 cd6:	80 e6       	ldi	r24, 0x60	; 96
 cd8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	// Set prescalar to 128 (for now), enable ADC
	ADCSRA |= (1 << ADPS2)  | (1 << ADPS1) | (1 << ADPS0) | (1 << ADEN);
 cdc:	ea e7       	ldi	r30, 0x7A	; 122
 cde:	f0 e0       	ldi	r31, 0x00	; 0
 ce0:	80 81       	ld	r24, Z
 ce2:	87 68       	ori	r24, 0x87	; 135
 ce4:	80 83       	st	Z, r24
	
	// Start first conversion to initialize ADC
	ADCSRA |= (1 << ADSC);
 ce6:	80 81       	ld	r24, Z
 ce8:	80 64       	ori	r24, 0x40	; 64
 cea:	80 83       	st	Z, r24
	// ADSC bit will go low once
	while (ADCSRA & (1 << ADSC));	
 cec:	80 81       	ld	r24, Z
 cee:	86 fd       	sbrc	r24, 6
 cf0:	fd cf       	rjmp	.-6      	; 0xcec <adc_init+0x16>
}
 cf2:	08 95       	ret

00000cf4 <io_init>:
{
	// There might be a need to set ADC pins as input...though that should be default
	// There are resistor settings that might need to be tweaked?
	
	// Set Pins 30-32, 1 (Port D 0-3) as output for LEDs
	DDRD |= 0x0F;
 cf4:	8a b1       	in	r24, 0x0a	; 10
 cf6:	8f 60       	ori	r24, 0x0F	; 15
 cf8:	8a b9       	out	0x0a, r24	; 10
	
	// Set Pin 13 (PortB1 / OC1A) as output for PWM output
	DDRB |= (1 << 1);
 cfa:	21 9a       	sbi	0x04, 1	; 4
 cfc:	08 95       	ret

00000cfe <init_notes>:
}

void init_notes()
{
 cfe:	e3 e0       	ldi	r30, 0x03	; 3
 d00:	f1 e0       	ldi	r31, 0x01	; 1
 d02:	81 e0       	ldi	r24, 0x01	; 1
	int i;
	
	// Initialize note structs
	for(i = 0; i < 4; i++)
	{
		note[i].phase = 0;
 d04:	13 82       	std	Z+3, r1	; 0x03
 d06:	12 82       	std	Z+2, r1	; 0x02
		note[i].state = OFF;
 d08:	10 82       	st	Z, r1
		note[i].step = (2 * i) + 1;
 d0a:	84 83       	std	Z+4, r24	; 0x04
		note[i].velocity = 0;
 d0c:	11 82       	std	Z+1, r1	; 0x01
		note[i].env_phase = 0;
 d0e:	16 82       	std	Z+6, r1	; 0x06
 d10:	15 82       	std	Z+5, r1	; 0x05
		note[i].env_step = 0;
 d12:	17 82       	std	Z+7, r1	; 0x07
 d14:	3a 96       	adiw	r30, 0x0a	; 10
 d16:	8e 5f       	subi	r24, 0xFE	; 254
void init_notes()
{
	int i;
	
	// Initialize note structs
	for(i = 0; i < 4; i++)
 d18:	89 30       	cpi	r24, 0x09	; 9
 d1a:	a1 f7       	brne	.-24     	; 0xd04 <init_notes+0x6>
		note[i].env_phase = 0;
		note[i].env_step = 0;
	}
	
	// Initialize envelope values
	env.a_step = 1;
 d1c:	eb e2       	ldi	r30, 0x2B	; 43
 d1e:	f1 e0       	ldi	r31, 0x01	; 1
 d20:	81 e0       	ldi	r24, 0x01	; 1
 d22:	80 83       	st	Z, r24
	env.d_step = 1;
 d24:	81 83       	std	Z+1, r24	; 0x01
	env.s_step = 1;
 d26:	82 83       	std	Z+2, r24	; 0x02
	env.r_step = 1;
 d28:	83 83       	std	Z+3, r24	; 0x03
 d2a:	08 95       	ret

00000d2c <main>:
struct envelope env;
uint8_t LFO_phase = 0;
uint16_t timer_val = 363;

int main(void)
{
 d2c:	cf 93       	push	r28
 d2e:	df 93       	push	r29
 d30:	cd b7       	in	r28, 0x3d	; 61
 d32:	de b7       	in	r29, 0x3e	; 62
 d34:	60 97       	sbiw	r28, 0x10	; 16
 d36:	0f b6       	in	r0, 0x3f	; 63
 d38:	f8 94       	cli
 d3a:	de bf       	out	0x3e, r29	; 62
 d3c:	0f be       	out	0x3f, r0	; 63
 d3e:	cd bf       	out	0x3d, r28	; 61
	// Sensor readings are 0 - 255 since
	// we're only using high byte of sensor readings
	uint8_t sensor_threshold = 0x10;
	
	// Storage for ADC readings
	uint8_t reading[4] = {0}, prev_reading[4] = {0}, peak_reading[4] = {0};
 d40:	19 82       	std	Y+1, r1	; 0x01
 d42:	1a 82       	std	Y+2, r1	; 0x02
 d44:	1b 82       	std	Y+3, r1	; 0x03
 d46:	1c 82       	std	Y+4, r1	; 0x04
 d48:	1d 82       	std	Y+5, r1	; 0x05
 d4a:	1e 82       	std	Y+6, r1	; 0x06
 d4c:	1f 82       	std	Y+7, r1	; 0x07
 d4e:	18 86       	std	Y+8, r1	; 0x08
	uint8_t i;
	uint8_t trigger[4] = {0};
 d50:	19 86       	std	Y+9, r1	; 0x09
 d52:	1a 86       	std	Y+10, r1	; 0x0a
 d54:	1b 86       	std	Y+11, r1	; 0x0b
 d56:	1c 86       	std	Y+12, r1	; 0x0c
	
	// Initial setup functions
	adc_init();
 d58:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <adc_init>
	io_init();
 d5c:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <io_init>
	tc_init();
 d60:	0e 94 3f 06 	call	0xc7e	; 0xc7e <tc_init>
	init_notes();
 d64:	0e 94 7f 06 	call	0xcfe	; 0xcfe <init_notes>
		{			
			// Turn on LED when sensor reading is > threshold
			if (trigger[i])
				PORTD |= (1 << i);
			else
				PORTD &= ~(1 << i);
 d68:	66 24       	eor	r6, r6
 d6a:	63 94       	inc	r6
 d6c:	71 2c       	mov	r7, r1
 d6e:	6f 86       	std	Y+15, r6	; 0x0f
 d70:	78 8a       	std	Y+16, r7	; 0x10
 d72:	6e 01       	movw	r12, r28
 d74:	89 e0       	ldi	r24, 0x09	; 9
 d76:	c8 0e       	add	r12, r24
 d78:	d1 1c       	adc	r13, r1
 d7a:	4e 01       	movw	r8, r28
 d7c:	95 e0       	ldi	r25, 0x05	; 5
 d7e:	89 0e       	add	r8, r25
 d80:	91 1c       	adc	r9, r1
 d82:	0f 2e       	mov	r0, r31
 d84:	f3 e0       	ldi	r31, 0x03	; 3
 d86:	ef 2e       	mov	r14, r31
 d88:	f1 e0       	ldi	r31, 0x01	; 1
 d8a:	ff 2e       	mov	r15, r31
 d8c:	f0 2d       	mov	r31, r0
 d8e:	fe 01       	movw	r30, r28
 d90:	31 96       	adiw	r30, 0x01	; 1
 d92:	5f 01       	movw	r10, r30
struct envelope env;
uint8_t LFO_phase = 0;
uint16_t timer_val = 363;

int main(void)
{
 d94:	00 e0       	ldi	r16, 0x00	; 0
 d96:	10 e0       	ldi	r17, 0x00	; 0
 d98:	30 2e       	mov	r3, r16
 d9a:	26 01       	movw	r4, r12
	{
		
		for	(i = 0; i < 4; i++)
		{			
			// Turn on LED when sensor reading is > threshold
			if (trigger[i])
 d9c:	f6 01       	movw	r30, r12
 d9e:	80 81       	ld	r24, Z
 da0:	88 23       	and	r24, r24
 da2:	59 f0       	breq	.+22     	; 0xdba <main+0x8e>
				PORTD |= (1 << i);
 da4:	2b b1       	in	r18, 0x0b	; 11
 da6:	c3 01       	movw	r24, r6
 da8:	00 2e       	mov	r0, r16
 daa:	02 c0       	rjmp	.+4      	; 0xdb0 <main+0x84>
 dac:	88 0f       	add	r24, r24
 dae:	99 1f       	adc	r25, r25
 db0:	0a 94       	dec	r0
 db2:	e2 f7       	brpl	.-8      	; 0xdac <main+0x80>
 db4:	82 2b       	or	r24, r18
 db6:	8b b9       	out	0x0b, r24	; 11
 db8:	0c c0       	rjmp	.+24     	; 0xdd2 <main+0xa6>
			else
				PORTD &= ~(1 << i);
 dba:	9b b1       	in	r25, 0x0b	; 11
 dbc:	93 01       	movw	r18, r6
 dbe:	00 2e       	mov	r0, r16
 dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <main+0x9a>
 dc2:	22 0f       	add	r18, r18
 dc4:	33 1f       	adc	r19, r19
 dc6:	0a 94       	dec	r0
 dc8:	e2 f7       	brpl	.-8      	; 0xdc2 <main+0x96>
 dca:	82 2f       	mov	r24, r18
 dcc:	80 95       	com	r24
 dce:	89 23       	and	r24, r25
 dd0:	8b b9       	out	0x0b, r24	; 11
 dd2:	fe 86       	std	Y+14, r15	; 0x0e
 dd4:	ed 86       	std	Y+13, r14	; 0x0d
			
			
			// Move to next phase of envelope
			if((note[i].env_phase & 0x2000) && (note[i].state != OFF))
 dd6:	f7 01       	movw	r30, r14
 dd8:	85 81       	ldd	r24, Z+5	; 0x05
 dda:	96 81       	ldd	r25, Z+6	; 0x06
 ddc:	95 ff       	sbrs	r25, 5
 dde:	06 c0       	rjmp	.+12     	; 0xdec <main+0xc0>
 de0:	80 81       	ld	r24, Z
 de2:	88 23       	and	r24, r24
 de4:	19 f0       	breq	.+6      	; 0xdec <main+0xc0>
				update_note(&note[i]);
 de6:	c7 01       	movw	r24, r14
 de8:	0e 94 fe 05 	call	0xbfc	; 0xbfc <update_note>
			
			// update sensor reading
			prev_reading[i] = reading[i];
 dec:	f5 01       	movw	r30, r10
 dee:	20 80       	ld	r2, Z
			reading[i] = read_ADC(i);
 df0:	83 2d       	mov	r24, r3
 df2:	0e 94 2d 06 	call	0xc5a	; 0xc5a <read_ADC>
 df6:	f5 01       	movw	r30, r10
 df8:	81 93       	st	Z+, r24
 dfa:	5f 01       	movw	r10, r30
			
			// update note state
			if (reading[i] >= sensor_threshold)
 dfc:	80 31       	cpi	r24, 0x10	; 16
 dfe:	30 f0       	brcs	.+12     	; 0xe0c <main+0xe0>
			{
				peak_reading[i] = reading[i];
 e00:	f4 01       	movw	r30, r8
 e02:	80 83       	st	Z, r24
				trigger[i] = 1;
 e04:	81 e0       	ldi	r24, 0x01	; 1
 e06:	f2 01       	movw	r30, r4
 e08:	80 83       	st	Z, r24
 e0a:	1c c0       	rjmp	.+56     	; 0xe44 <main+0x118>
			}
			else
			{
				if ((prev_reading[i] > reading[i]) & trigger[i])
 e0c:	2f 85       	ldd	r18, Y+15	; 0x0f
 e0e:	38 89       	ldd	r19, Y+16	; 0x10
 e10:	82 15       	cp	r24, r2
 e12:	10 f0       	brcs	.+4      	; 0xe18 <main+0xec>
 e14:	20 e0       	ldi	r18, 0x00	; 0
 e16:	30 e0       	ldi	r19, 0x00	; 0
 e18:	f2 01       	movw	r30, r4
 e1a:	90 81       	ld	r25, Z
 e1c:	89 2f       	mov	r24, r25
 e1e:	90 e0       	ldi	r25, 0x00	; 0
 e20:	82 23       	and	r24, r18
 e22:	93 23       	and	r25, r19
 e24:	89 2b       	or	r24, r25
 e26:	61 f0       	breq	.+24     	; 0xe40 <main+0x114>
				{
					note[i].velocity = peak_reading[i] >> 2;
 e28:	f4 01       	movw	r30, r8
 e2a:	80 81       	ld	r24, Z
 e2c:	86 95       	lsr	r24
 e2e:	86 95       	lsr	r24
 e30:	ed 85       	ldd	r30, Y+13	; 0x0d
 e32:	fe 85       	ldd	r31, Y+14	; 0x0e
 e34:	81 83       	std	Z+1, r24	; 0x01
					start_note(&note[i]);
 e36:	cf 01       	movw	r24, r30
 e38:	0e 94 de 05 	call	0xbbc	; 0xbbc <start_note>
					peak_reading[i] = 0;
 e3c:	f4 01       	movw	r30, r8
 e3e:	10 82       	st	Z, r1
				}
				trigger[i] = 0;
 e40:	f2 01       	movw	r30, r4
 e42:	10 82       	st	Z, r1
 e44:	0f 5f       	subi	r16, 0xFF	; 255
 e46:	1f 4f       	sbci	r17, 0xFF	; 255
 e48:	ff ef       	ldi	r31, 0xFF	; 255
 e4a:	cf 1a       	sub	r12, r31
 e4c:	df 0a       	sbc	r13, r31
 e4e:	8f ef       	ldi	r24, 0xFF	; 255
 e50:	88 1a       	sub	r8, r24
 e52:	98 0a       	sbc	r9, r24
 e54:	9a e0       	ldi	r25, 0x0A	; 10
 e56:	e9 0e       	add	r14, r25
 e58:	f1 1c       	adc	r15, r1
	
	// Polling loop
	while (1)
	{
		
		for	(i = 0; i < 4; i++)
 e5a:	04 30       	cpi	r16, 0x04	; 4
 e5c:	11 05       	cpc	r17, r1
 e5e:	09 f0       	breq	.+2      	; 0xe62 <main+0x136>
 e60:	9b cf       	rjmp	.-202    	; 0xd98 <main+0x6c>
 e62:	87 cf       	rjmp	.-242    	; 0xd72 <main+0x46>

00000e64 <_exit>:
 e64:	f8 94       	cli

00000e66 <__stop_program>:
 e66:	ff cf       	rjmp	.-2      	; 0xe66 <__stop_program>
